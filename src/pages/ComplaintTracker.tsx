import { useState } from "react";
import { Header } from "@/components/Header";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";
import { Search, Download, FileText, Calendar, MapPin, User, Phone, Mail } from "lucide-react";

interface ComplaintInfo {
  id: string;
  name: string;
  email: string;
  phone: string;
  address: string;
  complaintType: string;
  subject: string;
  description: string;
  dateOfIncident: string;
  location: string;
  status: string;
  submittedAt: string;
}

export default function ComplaintTracker() {
  const { toast } = useToast();
  const [complaintId, setComplaintId] = useState('');
  const [complaint, setComplaint] = useState<ComplaintInfo | null>(null);
  const [isSearching, setIsSearching] = useState(false);

  const handleSearch = async () => {
    if (!complaintId.trim()) {
      toast({
        title: "Error",
        description: "Please enter a complaint ID",
        variant: "destructive",
      });
      return;
    }

    setIsSearching(true);

    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Check localStorage for complaint (in real app, this would be a database query)
      const storedComplaint = localStorage.getItem(`complaint-${complaintId.trim()}`);
      
      if (storedComplaint) {
        setComplaint(JSON.parse(storedComplaint));
      } else {
        setComplaint(null);
        toast({
          title: "Not Found",
          description: "No complaint found with this ID. Please check the ID and try again.",
          variant: "destructive",
        });
      }
    } catch (error) {
      toast({
        title: "Error", 
        description: "Failed to search complaint. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsSearching(false);
    }
  };

  const handleDownload = () => {
    if (!complaint) return;

    const complaintText = `
LEGAL COMPLAINT DRAFT
Complaint ID: ${complaint.id}
Date Created: ${new Date(complaint.submittedAt).toLocaleDateString()}
Status: ${complaint.status}

PERSONAL INFORMATION:
Name: ${complaint.name}
Email: ${complaint.email}
Phone: ${complaint.phone}
Address: ${complaint.address}

COMPLAINT DETAILS:
Type: ${complaint.complaintType}
Subject: ${complaint.subject}
Date of Incident: ${new Date(complaint.dateOfIncident).toLocaleDateString()}
Location: ${complaint.location}

DESCRIPTION:
${complaint.description}

---
This complaint draft was generated by NyayyaGPT Legal Assistant.
For legal advice, please consult with a qualified attorney.
`;

    const blob = new Blob([complaintText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `complaint-${complaint.id}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Downloaded",
      description: "Complaint draft downloaded successfully",
    });
  };

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case 'draft':
        return 'bg-yellow-500 text-white';
      case 'submitted':
        return 'bg-blue-500 text-white';
      case 'pending':
        return 'bg-orange-500 text-white';
      case 'resolved':
        return 'bg-green-500 text-white';
      default:
        return 'bg-gray-500 text-white';
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-primary mb-4">Track Your Complaint</h1>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            Enter your complaint ID to view the status and download your complaint draft
          </p>
        </div>

        <Card className="max-w-2xl mx-auto p-6 shadow-elegant mb-8">
          <div className="flex items-center gap-3 mb-6">
            <Search className="h-6 w-6 text-accent" />
            <h2 className="text-xl font-semibold text-primary">Search Complaint</h2>
          </div>

          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="complaintId">Complaint ID</Label>
              <Input
                id="complaintId"
                value={complaintId}
                onChange={(e) => setComplaintId(e.target.value)}
                placeholder="CMP-2025-0001"
                className="text-center font-mono"
              />
              <p className="text-sm text-muted-foreground">
                Format: CMP-YYYY-NNNN (e.g., CMP-2025-0001)
              </p>
            </div>

            <Button 
              onClick={handleSearch}
              disabled={isSearching}
              className="w-full bg-gradient-accent hover:opacity-90"
            >
              {isSearching ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  Searching...
                </>
              ) : (
                <>
                  <Search className="h-4 w-4 mr-2" />
                  Track Complaint
                </>
              )}
            </Button>
          </div>
        </Card>

        {complaint && (
          <Card className="max-w-4xl mx-auto p-6 shadow-elegant">
            <div className="flex items-start justify-between mb-6">
              <div className="flex items-center gap-3">
                <FileText className="h-6 w-6 text-accent" />
                <div>
                  <h2 className="text-xl font-semibold text-primary">Complaint Details</h2>
                  <p className="text-sm text-muted-foreground">ID: {complaint.id}</p>
                </div>
              </div>
              <Badge className={getStatusColor(complaint.status)}>
                {complaint.status}
              </Badge>
            </div>

            <div className="grid md:grid-cols-2 gap-6 mb-6">
              {/* Personal Information */}
              <div className="space-y-4">
                <h3 className="font-semibold text-primary border-b pb-2">Personal Information</h3>
                
                <div className="space-y-3">
                  <div className="flex items-center gap-2">
                    <User className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">{complaint.name}</span>
                  </div>
                  
                  <div className="flex items-center gap-2">
                    <Mail className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">{complaint.email}</span>
                  </div>
                  
                  <div className="flex items-center gap-2">
                    <Phone className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">{complaint.phone}</span>
                  </div>
                  
                  <div className="flex items-start gap-2">
                    <MapPin className="h-4 w-4 text-muted-foreground mt-1" />
                    <span className="text-sm">{complaint.address}</span>
                  </div>
                </div>
              </div>

              {/* Complaint Information */}
              <div className="space-y-4">
                <h3 className="font-semibold text-primary border-b pb-2">Complaint Information</h3>
                
                <div className="space-y-3">
                  <div>
                    <p className="text-sm font-medium text-muted-foreground">Type</p>
                    <p className="text-sm">{complaint.complaintType}</p>
                  </div>
                  
                  <div>
                    <p className="text-sm font-medium text-muted-foreground">Subject</p>
                    <p className="text-sm">{complaint.subject}</p>
                  </div>
                  
                  <div className="flex items-center gap-2">
                    <Calendar className="h-4 w-4 text-muted-foreground" />
                    <div>
                      <p className="text-sm font-medium text-muted-foreground">Incident Date</p>
                      <p className="text-sm">{new Date(complaint.dateOfIncident).toLocaleDateString()}</p>
                    </div>
                  </div>
                  
                  <div>
                    <p className="text-sm font-medium text-muted-foreground">Location</p>
                    <p className="text-sm">{complaint.location}</p>
                  </div>
                </div>
              </div>
            </div>

            <div className="mb-6">
              <h3 className="font-semibold text-primary border-b pb-2 mb-3">Description</h3>
              <p className="text-sm text-muted-foreground bg-muted p-3 rounded-md">
                {complaint.description}
              </p>
            </div>

            <div className="flex items-center justify-between pt-4 border-t">
              <div className="text-sm text-muted-foreground">
                Created: {new Date(complaint.submittedAt).toLocaleDateString()} at {new Date(complaint.submittedAt).toLocaleTimeString()}
              </div>
              
              <Button onClick={handleDownload} className="bg-gradient-accent hover:opacity-90">
                <Download className="h-4 w-4 mr-2" />
                Download PDF
              </Button>
            </div>
          </Card>
        )}

        <Card className="max-w-4xl mx-auto mt-8 p-4 bg-muted/50">
          <p className="text-sm text-muted-foreground">
            <strong>Note:</strong> This is a complaint tracking system for drafts created through NyayyaGPT. 
            For official complaint status updates, contact the relevant authorities directly. 
            Keep your complaint ID safe for future reference.
          </p>
        </Card>
      </main>
    </div>
  );
}